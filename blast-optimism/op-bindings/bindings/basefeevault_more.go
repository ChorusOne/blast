// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const BaseFeeVaultStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/L2/BaseFeeVault.sol:BaseFeeVault\",\"label\":\"totalProcessed\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_uint256\"}],\"types\":{\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var BaseFeeVaultStorageLayout = new(solc.StorageLayout)

var BaseFeeVaultDeployedBin = "0x6080604052600436106100595760003560e01c80630d9019e1146100655780633ccfd60b146100b657806354fd4d50146100cd57806384411d651461010b578063d0e12f901461012f578063d3e5792b1461017057600080fd5b3661006057005b600080fd5b34801561007157600080fd5b506100997f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100c257600080fd5b506100cb6101a4565b005b3480156100d957600080fd5b506100fe60405180604001604052806005815260200164312e342e3160d81b81525081565b6040516100ad9190610549565b34801561011757600080fd5b5061012160005481565b6040519081526020016100ad565b34801561013b57600080fd5b506101637f000000000000000000000000000000000000000000000000000000000000000081565b6040516100ad919061059b565b34801561017c57600080fd5b506101217f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000004710156102525760405162461bcd60e51b815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d20776974686472616064820152691dd85b08185b5bdd5b9d60b21b608482015260a4015b60405180910390fd5b60004790508060008082825461026891906105af565b9091555050604080518281527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166020820152338183015290517fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9181900360600190a17f38e04cbeb8c10f8f568618aa75be0f10b6729b8b4237743b4de20cbcde2839ee817f0000000000000000000000000000000000000000000000000000000000000000337f000000000000000000000000000000000000000000000000000000000000000060405161034994939291906105d5565b60405180910390a160017f0000000000000000000000000000000000000000000000000000000000000000600181111561038557610385610563565b0361046a5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168260405160006040518083038185875af1925050503d80600081146103f7576040519150601f19603f3d011682016040523d82523d6000602084013e6103fc565b606091505b50509050806104665760405162461bcd60e51b815260206004820152603060248201527f4665655661756c743a206661696c656420746f2073656e642045544820746f2060448201526f130c88199959481c9958da5c1a595b9d60821b6064820152608401610249565b5050565b6040805160208101825260008152905163e11013dd60e01b81526010602160991b019163e11013dd9184916104c7917f0000000000000000000000000000000000000000000000000000000000000000916188b891600401610609565b6000604051808303818588803b1580156104e057600080fd5b505af11580156104f4573d6000803e3d6000fd5b505050505050565b6000815180845260005b8181101561052257602081850181015186830182015201610506565b81811115610534576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061055c60208301846104fc565b9392505050565b634e487b7160e01b600052602160045260246000fd5b6002811061059757634e487b7160e01b600052602160045260246000fd5b9052565b602081016105a98284610579565b92915050565b600082198211156105d057634e487b7160e01b600052601160045260246000fd5b500190565b8481526001600160a01b03848116602083015283166040820152608081016106006060830184610579565b95945050505050565b6001600160a01b038416815263ffffffff83166020820152606060408201819052600090610600908301846104fc56fea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(BaseFeeVaultStorageLayoutJSON), BaseFeeVaultStorageLayout); err != nil {
		panic(err)
	}

	layouts["BaseFeeVault"] = BaseFeeVaultStorageLayout
	deployedBytecodes["BaseFeeVault"] = BaseFeeVaultDeployedBin
}
