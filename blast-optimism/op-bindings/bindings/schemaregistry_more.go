// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const SchemaRegistryStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/EAS/SchemaRegistry.sol:SchemaRegistry\",\"label\":\"_registry\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_mapping(t_bytes32,t_struct(SchemaRecord)1003_storage)\"},{\"astId\":1001,\"contract\":\"src/EAS/SchemaRegistry.sol:SchemaRegistry\",\"label\":\"__gap\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_array(t_uint256)49_storage\"}],\"types\":{\"t_array(t_uint256)49_storage\":{\"encoding\":\"inplace\",\"label\":\"uint256[49]\",\"numberOfBytes\":\"1568\",\"base\":\"t_uint256\"},\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_contract(ISchemaResolver)1002\":{\"encoding\":\"inplace\",\"label\":\"contract ISchemaResolver\",\"numberOfBytes\":\"20\"},\"t_mapping(t_bytes32,t_struct(SchemaRecord)1003_storage)\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e struct SchemaRecord)\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_struct(SchemaRecord)1003_storage\"},\"t_string_storage\":{\"encoding\":\"bytes\",\"label\":\"string\",\"numberOfBytes\":\"32\"},\"t_struct(SchemaRecord)1003_storage\":{\"encoding\":\"inplace\",\"label\":\"struct SchemaRecord\",\"numberOfBytes\":\"96\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var SchemaRegistryStorageLayout = new(solc.StorageLayout)

var SchemaRegistryDeployedBin = "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806354fd4d501461004657806360d7a27814610080578063a2ea7c6e146100a1575b600080fd5b61006a604051806040016040528060058152602001640312e332e360dc1b81525081565b60405161007791906103b6565b60405180910390f35b61009361008e3660046103d0565b6100c1565b604051908152602001610077565b6100b46100af366004610475565b61021c565b604051610077919061048e565b60008060405180608001604052806000801b8152602001856001600160a01b03168152602001841515815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452509293509150610136905082610326565b600081815260208190526040902054909150156101665760405163119b4fd360e11b815260040160405180910390fd5b808252600081815260208181526040918290208451815590840151600182018054938601511515600160a01b026001600160a81b03199094166001600160a01b039092169190911792909217909155606083015183919060028201906101cc9082610578565b50905050336001600160a01b0316817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e8460405161020a919061048e565b60405180910390a39695505050505050565b60408051608081018252600080825260208201819052918101919091526060808201526000828152602081815260409182902082516080810184528154815260018201546001600160a01b03811693820193909352600160a01b90920460ff1615159282019290925260028201805491929160608401919061029d906104ef565b80601f01602080910402602001604051908101604052809291908181526020018280546102c9906104ef565b80156103165780601f106102eb57610100808354040283529160200191610316565b820191906000526020600020905b8154815290600101906020018083116102f957829003601f168201915b5050505050815250509050919050565b600081606001518260200151836040015160405160200161034993929190610638565b604051602081830303815290604052805190602001209050919050565b60005b83811015610381578181015183820152602001610369565b50506000910152565b600081518084526103a2816020860160208601610366565b601f01601f19169290920160200192915050565b6020815260006103c9602083018461038a565b9392505050565b600080600080606085870312156103e657600080fd5b843567ffffffffffffffff808211156103fe57600080fd5b818701915087601f83011261041257600080fd5b81358181111561042157600080fd5b88602082850101111561043357600080fd5b602092830196509450508501356001600160a01b038116811461045557600080fd5b91506040850135801515811461046a57600080fd5b939692955090935050565b60006020828403121561048757600080fd5b5035919050565b602081528151602082015260018060a01b036020830151166040820152604082015115156060820152600060608301516080808401526104d160a084018261038a565b949350505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061050357607f821691505b60208210810361052357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561057357600081815260208120601f850160051c810160208610156105505750805b601f850160051c820191505b8181101561056f5782815560010161055c565b5050505b505050565b815167ffffffffffffffff811115610592576105926104d9565b6105a6816105a084546104ef565b84610529565b602080601f8311600181146105db57600084156105c35750858301515b600019600386901b1c1916600185901b17855561056f565b600085815260208120601f198616915b8281101561060a578886015182559484019460019091019084016105eb565b50858210156106285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000845161064a818460208901610366565b60609490941b6bffffffffffffffffffffffff19169190930190815290151560f81b60148201526015019291505056fea164736f6c6343000813000a"

func init() {
	if err := json.Unmarshal([]byte(SchemaRegistryStorageLayoutJSON), SchemaRegistryStorageLayout); err != nil {
		panic(err)
	}

	layouts["SchemaRegistry"] = SchemaRegistryStorageLayout
	deployedBytecodes["SchemaRegistry"] = SchemaRegistryDeployedBin
}
